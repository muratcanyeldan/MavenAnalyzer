{"ast":null,"code":"var _jsxFileName = \"/Users/yeldan/IdeaProjects/MavenAnalyzer/MavenAnalyzerUI/src/components/charts/VulnerabilityPieChart.js\";\nimport React, { useMemo } from 'react';\nimport { ResponsivePie } from '@nivo/pie';\nimport { Box, Typography, CircularProgress } from '@mui/material';\n\n/**\n * Vulnerability Pie Chart component using Nivo\n * Displays the distribution of vulnerabilities in a more intuitive pie chart\n * \n * @param {Object} props - Component props\n * @param {Object} props.data - Either analysis data object or chart data from API\n * @param {boolean} props.loading - Loading state\n * @param {number} props.height - Chart height in pixels\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VulnerabilityPieChart = ({\n  data,\n  loading,\n  height = 300\n}) => {\n  // Process data to get vulnerability counts by status\n  const vulnerabilityData = useMemo(() => {\n    // Check if we have the new API data format\n    if (data !== null && data !== void 0 && data.data && Array.isArray(data.data)) {\n      // We have data from the chart data API - transform it for pie chart\n      const total = data.data.reduce((sum, item) => sum + item.count, 0);\n      return data.data.map(item => {\n        const percentage = Math.round(item.count / total * 100);\n        return {\n          id: item.category,\n          label: item.category,\n          value: item.count,\n          percentage: percentage,\n          color: getColorForCategory(item.category)\n        };\n      });\n    }\n\n    // Fallback to the old format (analysis object with dependencies)\n    if (!data || !data.dependencies || !Array.isArray(data.dependencies)) {\n      return [];\n    }\n\n    // Initialize counters for vulnerability statuses\n    const counts = {\n      'Vulnerable': 0,\n      'Secure': 0,\n      'Unknown': 0\n    };\n\n    // Count dependencies by vulnerability status\n    data.dependencies.forEach(dependency => {\n      if (dependency.isVulnerable) {\n        counts['Vulnerable']++;\n      } else if (dependency.vulnerableCount === 0) {\n        counts['Secure']++;\n      } else {\n        counts['Unknown']++;\n      }\n    });\n\n    // Convert to the format expected by the pie chart\n    return Object.entries(counts).filter(([_, count]) => count > 0) // Only include non-zero values\n    .map(([category, count]) => {\n      const total = Object.values(counts).reduce((sum, c) => sum + c, 0);\n      const percentage = Math.round(count / total * 100);\n      return {\n        id: category,\n        label: category,\n        value: count,\n        percentage: percentage,\n        color: getColorForCategory(category)\n      };\n    });\n  }, [data]);\n\n  // Calculate a clean summary text without any \"undefined\" in it\n  const cleanSummary = useMemo(() => {\n    var _vulnerabilityData$fi, _vulnerabilityData$fi2, _vulnerabilityData$fi3;\n    if (!vulnerabilityData || vulnerabilityData.length === 0) return null;\n    const total = vulnerabilityData.reduce((sum, item) => sum + item.value, 0);\n    const vulnerableCount = ((_vulnerabilityData$fi = vulnerabilityData.find(item => item.id === 'Vulnerable')) === null || _vulnerabilityData$fi === void 0 ? void 0 : _vulnerabilityData$fi.value) || 0;\n    const secureCount = ((_vulnerabilityData$fi2 = vulnerabilityData.find(item => item.id === 'Secure')) === null || _vulnerabilityData$fi2 === void 0 ? void 0 : _vulnerabilityData$fi2.value) || 0;\n    const unknownCount = ((_vulnerabilityData$fi3 = vulnerabilityData.find(item => item.id === 'Unknown')) === null || _vulnerabilityData$fi3 === void 0 ? void 0 : _vulnerabilityData$fi3.value) || 0;\n    let summary = '';\n    if (vulnerableCount > 0) {\n      const percentage = Math.round(vulnerableCount / total * 100);\n      summary += `${vulnerableCount} vulnerable (${percentage}%)`;\n    }\n    if (secureCount > 0) {\n      if (summary) summary += ', ';\n      const percentage = Math.round(secureCount / total * 100);\n      summary += `${secureCount} secure (${percentage}%)`;\n    }\n    if (unknownCount > 0) {\n      if (summary) summary += ', ';\n      const percentage = Math.round(unknownCount / total * 100);\n      summary += `${unknownCount} unknown (${percentage}%)`;\n    }\n    return summary || \"No vulnerability data available\";\n  }, [vulnerabilityData]);\n\n  // Add the clean summary to the data object if it's going to be used elsewhere\n  if (data) {\n    data.cleanSummary = cleanSummary || \"No vulnerability data available\";\n  }\n\n  // Return loading indicator if data is loading\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Return message if no data available\n  if (vulnerabilityData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height,\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"No vulnerability data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsivePie, {\n      data: vulnerabilityData,\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 40,\n        left: 20\n      },\n      innerRadius: 0.5,\n      padAngle: 0.7,\n      cornerRadius: 3,\n      activeOuterRadiusOffset: 8,\n      colors: ({\n        data\n      }) => data.color,\n      borderWidth: 1,\n      borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.2]]\n      },\n      arcLinkLabelsSkipAngle: 10,\n      arcLinkLabelsTextColor: \"#333333\",\n      arcLinkLabelsThickness: 2,\n      arcLinkLabelsColor: {\n        from: 'color'\n      },\n      arcLabelsSkipAngle: 10,\n      arcLabelsTextColor: {\n        from: 'color',\n        modifiers: [['darker', 2]]\n      },\n      tooltip: ({\n        datum\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'white',\n          padding: '9px 12px',\n          border: '1px solid #ccc',\n          borderRadius: '3px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            color: datum.color\n          },\n          children: [datum.label, \": \", datum.value, \" (\", datum.data.percentage, \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this),\n      valueFormat: value => `${value}`,\n      defs: [{\n        id: 'gradient',\n        type: 'linearGradient',\n        colors: [{\n          offset: 0,\n          color: 'inherit'\n        }, {\n          offset: 100,\n          color: 'inherit',\n          opacity: 0.7\n        }]\n      }],\n      fill: [{\n        match: '*',\n        id: 'gradient'\n      }],\n      legends: [{\n        anchor: 'bottom',\n        direction: 'row',\n        justify: false,\n        translateX: 0,\n        translateY: 40,\n        itemsSpacing: 20,\n        itemWidth: 80,\n        itemHeight: 20,\n        itemTextColor: '#333',\n        itemDirection: 'left-to-right',\n        itemOpacity: 1,\n        symbolSize: 15,\n        symbolShape: 'circle'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to get color based on vulnerability category\nfunction getColorForCategory(category) {\n  switch (category) {\n    case 'Vulnerable':\n      return '#f44336';\n    // red\n    case 'Secure':\n      return '#4caf50';\n    // green\n    case 'Monitored':\n      return '#ff9800';\n    // orange\n    case 'Unknown':\n      return '#9e9e9e';\n    // grey\n    default:\n      return '#9e9e9e';\n    // grey for any other case\n  }\n}\nexport default VulnerabilityPieChart;","map":{"version":3,"names":["React","useMemo","ResponsivePie","Box","Typography","CircularProgress","jsxDEV","_jsxDEV","VulnerabilityPieChart","data","loading","height","vulnerabilityData","Array","isArray","total","reduce","sum","item","count","map","percentage","Math","round","id","category","label","value","color","getColorForCategory","dependencies","counts","forEach","dependency","isVulnerable","vulnerableCount","Object","entries","filter","_","values","c","cleanSummary","_vulnerabilityData$fi","_vulnerabilityData$fi2","_vulnerabilityData$fi3","length","find","secureCount","unknownCount","summary","sx","display","justifyContent","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","p","margin","top","right","bottom","left","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","colors","borderWidth","borderColor","from","modifiers","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","tooltip","datum","style","background","padding","border","borderRadius","boxShadow","valueFormat","defs","type","offset","opacity","fill","match","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape"],"sources":["/Users/yeldan/IdeaProjects/MavenAnalyzer/MavenAnalyzerUI/src/components/charts/VulnerabilityPieChart.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { ResponsivePie } from '@nivo/pie';\nimport { Box, Typography, CircularProgress } from '@mui/material';\n\n/**\n * Vulnerability Pie Chart component using Nivo\n * Displays the distribution of vulnerabilities in a more intuitive pie chart\n * \n * @param {Object} props - Component props\n * @param {Object} props.data - Either analysis data object or chart data from API\n * @param {boolean} props.loading - Loading state\n * @param {number} props.height - Chart height in pixels\n */\nconst VulnerabilityPieChart = ({ data, loading, height = 300 }) => {\n  // Process data to get vulnerability counts by status\n  const vulnerabilityData = useMemo(() => {\n    // Check if we have the new API data format\n    if (data?.data && Array.isArray(data.data)) {\n      // We have data from the chart data API - transform it for pie chart\n      const total = data.data.reduce((sum, item) => sum + item.count, 0);\n      return data.data.map(item => {\n        const percentage = Math.round((item.count / total) * 100);\n        return {\n          id: item.category,\n          label: item.category,\n          value: item.count,\n          percentage: percentage,\n          color: getColorForCategory(item.category)\n        };\n      });\n    }\n    \n    // Fallback to the old format (analysis object with dependencies)\n    if (!data || !data.dependencies || !Array.isArray(data.dependencies)) {\n      return [];\n    }\n\n    // Initialize counters for vulnerability statuses\n    const counts = {\n      'Vulnerable': 0,\n      'Secure': 0,\n      'Unknown': 0\n    };\n\n    // Count dependencies by vulnerability status\n    data.dependencies.forEach(dependency => {\n      if (dependency.isVulnerable) {\n        counts['Vulnerable']++;\n      } else if (dependency.vulnerableCount === 0) {\n        counts['Secure']++;\n      } else {\n        counts['Unknown']++;\n      }\n    });\n\n    // Convert to the format expected by the pie chart\n    return Object.entries(counts)\n      .filter(([_, count]) => count > 0) // Only include non-zero values\n      .map(([category, count]) => {\n        const total = Object.values(counts).reduce((sum, c) => sum + c, 0);\n        const percentage = Math.round((count / total) * 100);\n        return {\n          id: category,\n          label: category,\n          value: count,\n          percentage: percentage,\n          color: getColorForCategory(category)\n        };\n      });\n  }, [data]);\n\n  // Calculate a clean summary text without any \"undefined\" in it\n  const cleanSummary = useMemo(() => {\n    if (!vulnerabilityData || vulnerabilityData.length === 0) return null;\n    \n    const total = vulnerabilityData.reduce((sum, item) => sum + item.value, 0);\n    const vulnerableCount = vulnerabilityData.find(item => item.id === 'Vulnerable')?.value || 0;\n    const secureCount = vulnerabilityData.find(item => item.id === 'Secure')?.value || 0;\n    const unknownCount = vulnerabilityData.find(item => item.id === 'Unknown')?.value || 0;\n    \n    let summary = '';\n    \n    if (vulnerableCount > 0) {\n      const percentage = Math.round((vulnerableCount / total) * 100);\n      summary += `${vulnerableCount} vulnerable (${percentage}%)`;\n    }\n    \n    if (secureCount > 0) {\n      if (summary) summary += ', ';\n      const percentage = Math.round((secureCount / total) * 100);\n      summary += `${secureCount} secure (${percentage}%)`;\n    }\n    \n    if (unknownCount > 0) {\n      if (summary) summary += ', ';\n      const percentage = Math.round((unknownCount / total) * 100);\n      summary += `${unknownCount} unknown (${percentage}%)`;\n    }\n    \n    return summary || \"No vulnerability data available\";\n  }, [vulnerabilityData]);\n  \n  // Add the clean summary to the data object if it's going to be used elsewhere\n  if (data) {\n    data.cleanSummary = cleanSummary || \"No vulnerability data available\";\n  }\n\n  // Return loading indicator if data is loading\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Return message if no data available\n  if (vulnerabilityData.length === 0) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height, p: 2 }}>\n        <Typography color=\"text.secondary\">No vulnerability data available</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ height }}>\n      <ResponsivePie\n        data={vulnerabilityData}\n        margin={{ top: 20, right: 20, bottom: 40, left: 20 }}\n        innerRadius={0.5}\n        padAngle={0.7}\n        cornerRadius={3}\n        activeOuterRadiusOffset={8}\n        colors={({ data }) => data.color}\n        borderWidth={1}\n        borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n        arcLinkLabelsSkipAngle={10}\n        arcLinkLabelsTextColor=\"#333333\"\n        arcLinkLabelsThickness={2}\n        arcLinkLabelsColor={{ from: 'color' }}\n        arcLabelsSkipAngle={10}\n        arcLabelsTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n        tooltip={({ datum }) => (\n          <div\n            style={{\n              background: 'white',\n              padding: '9px 12px',\n              border: '1px solid #ccc',\n              borderRadius: '3px',\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n            }}\n          >\n            <strong style={{ color: datum.color }}>\n              {datum.label}: {datum.value} ({datum.data.percentage}%)\n            </strong>\n          </div>\n        )}\n        valueFormat={value => `${value}`}\n        defs={[\n          {\n            id: 'gradient',\n            type: 'linearGradient',\n            colors: [\n              { offset: 0, color: 'inherit' },\n              { offset: 100, color: 'inherit', opacity: 0.7 }\n            ]\n          }\n        ]}\n        fill={[\n          { match: '*', id: 'gradient' }\n        ]}\n        legends={[\n          {\n            anchor: 'bottom',\n            direction: 'row',\n            justify: false,\n            translateX: 0,\n            translateY: 40,\n            itemsSpacing: 20,\n            itemWidth: 80,\n            itemHeight: 20,\n            itemTextColor: '#333',\n            itemDirection: 'left-to-right',\n            itemOpacity: 1,\n            symbolSize: 15,\n            symbolShape: 'circle'\n          }\n        ]}\n      />\n    </Box>\n  );\n};\n\n// Helper function to get color based on vulnerability category\nfunction getColorForCategory(category) {\n  switch (category) {\n    case 'Vulnerable':\n      return '#f44336'; // red\n    case 'Secure':\n      return '#4caf50'; // green\n    case 'Monitored':\n      return '#ff9800'; // orange\n    case 'Unknown':\n      return '#9e9e9e'; // grey\n    default:\n      return '#9e9e9e'; // grey for any other case\n  }\n}\n\nexport default VulnerabilityPieChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}