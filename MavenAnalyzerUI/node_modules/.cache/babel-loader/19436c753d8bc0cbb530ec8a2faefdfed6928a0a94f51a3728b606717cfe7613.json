{"ast":null,"code":"var _jsxFileName = \"/Users/yeldan/IdeaProjects/MavenAnalyzer/MavenAnalyzerUI/src/components/charts/DependencyStatusChart.js\";\nimport React, { useMemo } from 'react';\nimport { ResponsivePie } from '@nivo/pie';\nimport { Box, Typography, CircularProgress } from '@mui/material';\n\n/**\n * Dependency Status Pie Chart component using Nivo\n * \n * @param {Object} props - Component props\n * @param {Object} props.data - Either analysis data object or pie chart data from API\n * @param {boolean} props.loading - Loading state\n * @param {number} props.height - Chart height in pixels\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DependencyStatusChart = ({\n  data,\n  loading,\n  height = 300\n}) => {\n  // Prepare data for the pie chart - moved to top level for Hook rule compliance\n  const chartData = useMemo(() => {\n    // Check if we have the new API data format (array of entries)\n    if (data !== null && data !== void 0 && data.data && Array.isArray(data.data)) {\n      // We have data from the chart data API\n      return data.data;\n    }\n\n    // Fallback to the old format (analysis object)\n    if (!data || !data.upToDateDependencies) {\n      return [];\n    }\n    return [{\n      id: 'Up-to-date',\n      label: 'Up-to-date',\n      value: data.upToDateDependencies || 0,\n      color: '#4caf50' // green\n    }, {\n      id: 'Outdated',\n      label: 'Outdated',\n      value: data.outdatedDependencies || 0,\n      color: '#ff9800' // orange\n    }, {\n      id: 'Unknown',\n      label: 'Unknown',\n      value: data.unidentifiedDependencies || 0,\n      color: '#9e9e9e' // grey\n    }].filter(item => item.value > 0); // Only include items with values > 0\n  }, [data]);\n\n  // Return loading indicator if data is loading\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Return message if no data available\n  if (!(data !== null && data !== void 0 && data.data) && !(data !== null && data !== void 0 && data.upToDateDependencies) || chartData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height,\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"No dependency data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsivePie, {\n      data: chartData,\n      margin: {\n        top: 40,\n        right: 80,\n        bottom: 40,\n        left: 80\n      },\n      innerRadius: 0.5,\n      padAngle: 0.7,\n      cornerRadius: 3,\n      activeOuterRadiusOffset: 8,\n      borderWidth: 1,\n      borderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.2]]\n      },\n      arcLinkLabelsSkipAngle: 10,\n      arcLinkLabelsTextColor: \"#333333\",\n      arcLinkLabelsThickness: 2,\n      arcLinkLabelsColor: {\n        from: 'color'\n      },\n      arcLabelsSkipAngle: 10,\n      arcLabelsTextColor: {\n        from: 'color',\n        modifiers: [['darker', 2]]\n      },\n      colors: {\n        datum: 'data.color'\n      },\n      legends: [{\n        anchor: 'right',\n        direction: 'column',\n        justify: false,\n        translateX: 30,\n        translateY: 0,\n        itemsSpacing: 0,\n        itemWidth: 100,\n        itemHeight: 26,\n        itemTextColor: '#999',\n        itemDirection: 'left-to-right',\n        itemOpacity: 1,\n        symbolSize: 18,\n        symbolShape: 'circle'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\nexport default DependencyStatusChart;","map":{"version":3,"names":["React","useMemo","ResponsivePie","Box","Typography","CircularProgress","jsxDEV","_jsxDEV","DependencyStatusChart","data","loading","height","chartData","Array","isArray","upToDateDependencies","id","label","value","color","outdatedDependencies","unidentifiedDependencies","filter","item","sx","display","justifyContent","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","length","p","margin","top","right","bottom","left","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","borderColor","from","modifiers","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","colors","datum","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape"],"sources":["/Users/yeldan/IdeaProjects/MavenAnalyzer/MavenAnalyzerUI/src/components/charts/DependencyStatusChart.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { ResponsivePie } from '@nivo/pie';\nimport { Box, Typography, CircularProgress } from '@mui/material';\n\n/**\n * Dependency Status Pie Chart component using Nivo\n * \n * @param {Object} props - Component props\n * @param {Object} props.data - Either analysis data object or pie chart data from API\n * @param {boolean} props.loading - Loading state\n * @param {number} props.height - Chart height in pixels\n */\nconst DependencyStatusChart = ({ data, loading, height = 300 }) => {\n  // Prepare data for the pie chart - moved to top level for Hook rule compliance\n  const chartData = useMemo(() => {\n    // Check if we have the new API data format (array of entries)\n    if (data?.data && Array.isArray(data.data)) {\n      // We have data from the chart data API\n      return data.data;\n    }\n    \n    // Fallback to the old format (analysis object)\n    if (!data || !data.upToDateDependencies) {\n      return [];\n    }\n\n    return [\n      {\n        id: 'Up-to-date',\n        label: 'Up-to-date',\n        value: data.upToDateDependencies || 0,\n        color: '#4caf50' // green\n      },\n      {\n        id: 'Outdated',\n        label: 'Outdated',\n        value: data.outdatedDependencies || 0,\n        color: '#ff9800' // orange\n      },\n      {\n        id: 'Unknown',\n        label: 'Unknown',\n        value: data.unidentifiedDependencies || 0,\n        color: '#9e9e9e' // grey\n      }\n    ].filter(item => item.value > 0); // Only include items with values > 0\n  }, [data]);\n\n  // Return loading indicator if data is loading\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Return message if no data available\n  if ((!data?.data && !data?.upToDateDependencies) || chartData.length === 0) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height, p: 2 }}>\n        <Typography color=\"text.secondary\">No dependency data available</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ height }}>\n      <ResponsivePie\n        data={chartData}\n        margin={{ top: 40, right: 80, bottom: 40, left: 80 }}\n        innerRadius={0.5}\n        padAngle={0.7}\n        cornerRadius={3}\n        activeOuterRadiusOffset={8}\n        borderWidth={1}\n        borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n        arcLinkLabelsSkipAngle={10}\n        arcLinkLabelsTextColor=\"#333333\"\n        arcLinkLabelsThickness={2}\n        arcLinkLabelsColor={{ from: 'color' }}\n        arcLabelsSkipAngle={10}\n        arcLabelsTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n        colors={{ datum: 'data.color' }}\n        legends={[\n          {\n            anchor: 'right',\n            direction: 'column',\n            justify: false,\n            translateX: 30,\n            translateY: 0,\n            itemsSpacing: 0,\n            itemWidth: 100,\n            itemHeight: 26,\n            itemTextColor: '#999',\n            itemDirection: 'left-to-right',\n            itemOpacity: 1,\n            symbolSize: 18,\n            symbolShape: 'circle'\n          }\n        ]}\n      />\n    </Box>\n  );\n};\n\nexport default DependencyStatusChart; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,aAAa,QAAQ,WAAW;AACzC,SAASC,GAAG,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,eAAe;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,MAAM,GAAG;AAAI,CAAC,KAAK;EACjE;EACA,MAAMC,SAAS,GAAGX,OAAO,CAAC,MAAM;IAC9B;IACA,IAAIQ,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEA,IAAI,IAAII,KAAK,CAACC,OAAO,CAACL,IAAI,CAACA,IAAI,CAAC,EAAE;MAC1C;MACA,OAAOA,IAAI,CAACA,IAAI;IAClB;;IAEA;IACA,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACM,oBAAoB,EAAE;MACvC,OAAO,EAAE;IACX;IAEA,OAAO,CACL;MACEC,EAAE,EAAE,YAAY;MAChBC,KAAK,EAAE,YAAY;MACnBC,KAAK,EAAET,IAAI,CAACM,oBAAoB,IAAI,CAAC;MACrCI,KAAK,EAAE,SAAS,CAAC;IACnB,CAAC,EACD;MACEH,EAAE,EAAE,UAAU;MACdC,KAAK,EAAE,UAAU;MACjBC,KAAK,EAAET,IAAI,CAACW,oBAAoB,IAAI,CAAC;MACrCD,KAAK,EAAE,SAAS,CAAC;IACnB,CAAC,EACD;MACEH,EAAE,EAAE,SAAS;MACbC,KAAK,EAAE,SAAS;MAChBC,KAAK,EAAET,IAAI,CAACY,wBAAwB,IAAI,CAAC;MACzCF,KAAK,EAAE,SAAS,CAAC;IACnB,CAAC,CACF,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;;EAEV;EACA,IAAIC,OAAO,EAAE;IACX,oBACEH,OAAA,CAACJ,GAAG;MAACqB,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEhB;MAAO,CAAE;MAAAiB,QAAA,eACnFrB,OAAA,CAACF,gBAAgB;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;;EAEA;EACA,IAAK,EAACvB,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEA,IAAI,KAAI,EAACA,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEM,oBAAoB,KAAKH,SAAS,CAACqB,MAAM,KAAK,CAAC,EAAE;IAC1E,oBACE1B,OAAA,CAACJ,GAAG;MAACqB,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEhB,MAAM;QAAEuB,CAAC,EAAE;MAAE,CAAE;MAAAN,QAAA,eACzFrB,OAAA,CAACH,UAAU;QAACe,KAAK,EAAC,gBAAgB;QAAAS,QAAA,EAAC;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC;EAEV;EAEA,oBACEzB,OAAA,CAACJ,GAAG;IAACqB,EAAE,EAAE;MAAEb;IAAO,CAAE;IAAAiB,QAAA,eAClBrB,OAAA,CAACL,aAAa;MACZO,IAAI,EAAEG,SAAU;MAChBuB,MAAM,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAE;MACrDC,WAAW,EAAE,GAAI;MACjBC,QAAQ,EAAE,GAAI;MACdC,YAAY,EAAE,CAAE;MAChBC,uBAAuB,EAAE,CAAE;MAC3BC,WAAW,EAAE,CAAE;MACfC,WAAW,EAAE;QAAEC,IAAI,EAAE,OAAO;QAAEC,SAAS,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC;MAAE,CAAE;MAC7DC,sBAAsB,EAAE,EAAG;MAC3BC,sBAAsB,EAAC,SAAS;MAChCC,sBAAsB,EAAE,CAAE;MAC1BC,kBAAkB,EAAE;QAAEL,IAAI,EAAE;MAAQ,CAAE;MACtCM,kBAAkB,EAAE,EAAG;MACvBC,kBAAkB,EAAE;QAAEP,IAAI,EAAE,OAAO;QAAEC,SAAS,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;MAAE,CAAE;MAClEO,MAAM,EAAE;QAAEC,KAAK,EAAE;MAAa,CAAE;MAChCC,OAAO,EAAE,CACP;QACEC,MAAM,EAAE,OAAO;QACfC,SAAS,EAAE,QAAQ;QACnBC,OAAO,EAAE,KAAK;QACdC,UAAU,EAAE,EAAE;QACdC,UAAU,EAAE,CAAC;QACbC,YAAY,EAAE,CAAC;QACfC,SAAS,EAAE,GAAG;QACdC,UAAU,EAAE,EAAE;QACdC,aAAa,EAAE,MAAM;QACrBC,aAAa,EAAE,eAAe;QAC9BC,WAAW,EAAE,CAAC;QACdC,UAAU,EAAE,EAAE;QACdC,WAAW,EAAE;MACf,CAAC;IACD;MAAAxC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAED,eAAexB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}