{"ast":null,"code":"var _jsxFileName = \"/Users/yeldan/IdeaProjects/MavenAnalyzer/MavenAnalyzerUI/src/components/charts/VulnerabilityChart.js\";\nimport React, { useMemo } from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { Box, Typography, CircularProgress } from '@mui/material';\n\n/**\n * Vulnerability Bar Chart component using Nivo\n * \n * @param {Object} props - Component props\n * @param {Object} props.data - Analysis data containing dependencies with vulnerabilities\n * @param {boolean} props.loading - Loading state\n * @param {number} props.height - Chart height in pixels\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VulnerabilityChart = ({\n  data,\n  loading,\n  height = 300\n}) => {\n  // Process data to get vulnerability counts by severity - moved to top level before any returns\n  const vulnerabilityData = useMemo(() => {\n    // If no data or dependencies, return empty array\n    if (!data || !data.dependencies) {\n      return [];\n    }\n\n    // Initialize counters for each severity level\n    const counts = {\n      Critical: 0,\n      High: 0,\n      Medium: 0,\n      Low: 0,\n      None: 0\n    };\n\n    // Count vulnerabilities by severity\n    data.dependencies.forEach(dependency => {\n      if (dependency.vulnerabilities) {\n        dependency.vulnerabilities.forEach(vuln => {\n          // Extract severity from the vulnerability - assuming this exists in your data\n          // If not, you might need to adapt this based on your actual data structure\n          const severity = vuln.severity || 'Unknown';\n          if (counts[severity] !== undefined) {\n            counts[severity]++;\n          }\n        });\n      }\n    });\n\n    // Convert to the format expected by the bar chart\n    return Object.keys(counts).filter(key => counts[key] > 0 && key !== 'None') // Only include non-zero values and exclude 'None'\n    .map(key => ({\n      severity: key,\n      count: counts[key],\n      color: getColorForSeverity(key)\n    }));\n  }, [data]);\n\n  // Return loading indicator if data is loading\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Return message if no data available\n  if (!data || !data.dependencies) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height,\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"No vulnerability data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If no vulnerability data, show a message\n  if (vulnerabilityData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height,\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"No vulnerability data found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsiveBar, {\n      data: vulnerabilityData,\n      keys: ['count'],\n      indexBy: \"severity\",\n      margin: {\n        top: 40,\n        right: 50,\n        bottom: 40,\n        left: 60\n      },\n      padding: 0.3,\n      valueScale: {\n        type: 'linear'\n      },\n      indexScale: {\n        type: 'band',\n        round: true\n      },\n      colors: ({\n        data\n      }) => data.color,\n      borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1.6]]\n      },\n      axisTop: null,\n      axisRight: null,\n      axisBottom: {\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'Severity',\n        legendPosition: 'middle',\n        legendOffset: 32\n      },\n      axisLeft: {\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'Count',\n        legendPosition: 'middle',\n        legendOffset: -40\n      },\n      labelSkipWidth: 12,\n      labelSkipHeight: 12,\n      labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 1.6]]\n      },\n      animate: true,\n      motionStiffness: 90,\n      motionDamping: 15\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to get color based on severity\nfunction getColorForSeverity(severity) {\n  switch (severity) {\n    case 'Critical':\n      return '#d32f2f';\n    // dark red\n    case 'High':\n      return '#f44336';\n    // red\n    case 'Medium':\n      return '#ff9800';\n    // orange\n    case 'Low':\n      return '#ffeb3b';\n    // yellow\n    default:\n      return '#9e9e9e';\n    // grey\n  }\n}\nexport default VulnerabilityChart;","map":{"version":3,"names":["React","useMemo","ResponsiveBar","Box","Typography","CircularProgress","jsxDEV","_jsxDEV","VulnerabilityChart","data","loading","height","vulnerabilityData","dependencies","counts","Critical","High","Medium","Low","None","forEach","dependency","vulnerabilities","vuln","severity","undefined","Object","keys","filter","key","map","count","color","getColorForSeverity","sx","display","justifyContent","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","p","length","indexBy","margin","top","right","bottom","left","padding","valueScale","type","indexScale","round","colors","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping"],"sources":["/Users/yeldan/IdeaProjects/MavenAnalyzer/MavenAnalyzerUI/src/components/charts/VulnerabilityChart.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { Box, Typography, CircularProgress } from '@mui/material';\n\n/**\n * Vulnerability Bar Chart component using Nivo\n * \n * @param {Object} props - Component props\n * @param {Object} props.data - Analysis data containing dependencies with vulnerabilities\n * @param {boolean} props.loading - Loading state\n * @param {number} props.height - Chart height in pixels\n */\nconst VulnerabilityChart = ({ data, loading, height = 300 }) => {\n  // Process data to get vulnerability counts by severity - moved to top level before any returns\n  const vulnerabilityData = useMemo(() => {\n    // If no data or dependencies, return empty array\n    if (!data || !data.dependencies) {\n      return [];\n    }\n\n    // Initialize counters for each severity level\n    const counts = {\n      Critical: 0,\n      High: 0,\n      Medium: 0,\n      Low: 0,\n      None: 0\n    };\n\n    // Count vulnerabilities by severity\n    data.dependencies.forEach(dependency => {\n      if (dependency.vulnerabilities) {\n        dependency.vulnerabilities.forEach(vuln => {\n          // Extract severity from the vulnerability - assuming this exists in your data\n          // If not, you might need to adapt this based on your actual data structure\n          const severity = vuln.severity || 'Unknown';\n          if (counts[severity] !== undefined) {\n            counts[severity]++;\n          }\n        });\n      }\n    });\n\n    // Convert to the format expected by the bar chart\n    return Object.keys(counts)\n      .filter(key => counts[key] > 0 && key !== 'None') // Only include non-zero values and exclude 'None'\n      .map(key => ({\n        severity: key,\n        count: counts[key],\n        color: getColorForSeverity(key)\n      }));\n  }, [data]);\n\n  // Return loading indicator if data is loading\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Return message if no data available\n  if (!data || !data.dependencies) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height, p: 2 }}>\n        <Typography color=\"text.secondary\">No vulnerability data available</Typography>\n      </Box>\n    );\n  }\n\n  // If no vulnerability data, show a message\n  if (vulnerabilityData.length === 0) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height, p: 2 }}>\n        <Typography color=\"text.secondary\">No vulnerability data found</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ height }}>\n      <ResponsiveBar\n        data={vulnerabilityData}\n        keys={['count']}\n        indexBy=\"severity\"\n        margin={{ top: 40, right: 50, bottom: 40, left: 60 }}\n        padding={0.3}\n        valueScale={{ type: 'linear' }}\n        indexScale={{ type: 'band', round: true }}\n        colors={({ data }) => data.color}\n        borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Severity',\n          legendPosition: 'middle',\n          legendOffset: 32\n        }}\n        axisLeft={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Count',\n          legendPosition: 'middle',\n          legendOffset: -40\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n      />\n    </Box>\n  );\n};\n\n// Helper function to get color based on severity\nfunction getColorForSeverity(severity) {\n  switch (severity) {\n    case 'Critical':\n      return '#d32f2f'; // dark red\n    case 'High':\n      return '#f44336'; // red\n    case 'Medium':\n      return '#ff9800'; // orange\n    case 'Low':\n      return '#ffeb3b'; // yellow\n    default:\n      return '#9e9e9e'; // grey\n  }\n}\n\nexport default VulnerabilityChart; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,aAAa,QAAQ,WAAW;AACzC,SAASC,GAAG,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,eAAe;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,MAAM,GAAG;AAAI,CAAC,KAAK;EAC9D;EACA,MAAMC,iBAAiB,GAAGX,OAAO,CAAC,MAAM;IACtC;IACA,IAAI,CAACQ,IAAI,IAAI,CAACA,IAAI,CAACI,YAAY,EAAE;MAC/B,OAAO,EAAE;IACX;;IAEA;IACA,MAAMC,MAAM,GAAG;MACbC,QAAQ,EAAE,CAAC;MACXC,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE,CAAC;MACTC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE;IACR,CAAC;;IAED;IACAV,IAAI,CAACI,YAAY,CAACO,OAAO,CAACC,UAAU,IAAI;MACtC,IAAIA,UAAU,CAACC,eAAe,EAAE;QAC9BD,UAAU,CAACC,eAAe,CAACF,OAAO,CAACG,IAAI,IAAI;UACzC;UACA;UACA,MAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAQ,IAAI,SAAS;UAC3C,IAAIV,MAAM,CAACU,QAAQ,CAAC,KAAKC,SAAS,EAAE;YAClCX,MAAM,CAACU,QAAQ,CAAC,EAAE;UACpB;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;;IAEF;IACA,OAAOE,MAAM,CAACC,IAAI,CAACb,MAAM,CAAC,CACvBc,MAAM,CAACC,GAAG,IAAIf,MAAM,CAACe,GAAG,CAAC,GAAG,CAAC,IAAIA,GAAG,KAAK,MAAM,CAAC,CAAC;IAAA,CACjDC,GAAG,CAACD,GAAG,KAAK;MACXL,QAAQ,EAAEK,GAAG;MACbE,KAAK,EAAEjB,MAAM,CAACe,GAAG,CAAC;MAClBG,KAAK,EAAEC,mBAAmB,CAACJ,GAAG;IAChC,CAAC,CAAC,CAAC;EACP,CAAC,EAAE,CAACpB,IAAI,CAAC,CAAC;;EAEV;EACA,IAAIC,OAAO,EAAE;IACX,oBACEH,OAAA,CAACJ,GAAG;MAAC+B,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAE1B;MAAO,CAAE;MAAA2B,QAAA,eACnF/B,OAAA,CAACF,gBAAgB;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;;EAEA;EACA,IAAI,CAACjC,IAAI,IAAI,CAACA,IAAI,CAACI,YAAY,EAAE;IAC/B,oBACEN,OAAA,CAACJ,GAAG;MAAC+B,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAE1B,MAAM;QAAEgC,CAAC,EAAE;MAAE,CAAE;MAAAL,QAAA,eACzF/B,OAAA,CAACH,UAAU;QAAC4B,KAAK,EAAC,gBAAgB;QAAAM,QAAA,EAAC;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC;EAEV;;EAEA;EACA,IAAI9B,iBAAiB,CAACgC,MAAM,KAAK,CAAC,EAAE;IAClC,oBACErC,OAAA,CAACJ,GAAG;MAAC+B,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAE1B,MAAM;QAAEgC,CAAC,EAAE;MAAE,CAAE;MAAAL,QAAA,eACzF/B,OAAA,CAACH,UAAU;QAAC4B,KAAK,EAAC,gBAAgB;QAAAM,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC;EAEV;EAEA,oBACEnC,OAAA,CAACJ,GAAG;IAAC+B,EAAE,EAAE;MAAEvB;IAAO,CAAE;IAAA2B,QAAA,eAClB/B,OAAA,CAACL,aAAa;MACZO,IAAI,EAAEG,iBAAkB;MACxBe,IAAI,EAAE,CAAC,OAAO,CAAE;MAChBkB,OAAO,EAAC,UAAU;MAClBC,MAAM,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAE;MACrDC,OAAO,EAAE,GAAI;MACbC,UAAU,EAAE;QAAEC,IAAI,EAAE;MAAS,CAAE;MAC/BC,UAAU,EAAE;QAAED,IAAI,EAAE,MAAM;QAAEE,KAAK,EAAE;MAAK,CAAE;MAC1CC,MAAM,EAAEA,CAAC;QAAE/C;MAAK,CAAC,KAAKA,IAAI,CAACuB,KAAM;MACjCyB,WAAW,EAAE;QAAEC,IAAI,EAAE,OAAO;QAAEC,SAAS,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC;MAAE,CAAE;MAC7DC,OAAO,EAAE,IAAK;MACdC,SAAS,EAAE,IAAK;MAChBC,UAAU,EAAE;QACVC,QAAQ,EAAE,CAAC;QACXC,WAAW,EAAE,CAAC;QACdC,YAAY,EAAE,CAAC;QACfC,MAAM,EAAE,UAAU;QAClBC,cAAc,EAAE,QAAQ;QACxBC,YAAY,EAAE;MAChB,CAAE;MACFC,QAAQ,EAAE;QACRN,QAAQ,EAAE,CAAC;QACXC,WAAW,EAAE,CAAC;QACdC,YAAY,EAAE,CAAC;QACfC,MAAM,EAAE,OAAO;QACfC,cAAc,EAAE,QAAQ;QACxBC,YAAY,EAAE,CAAC;MACjB,CAAE;MACFE,cAAc,EAAE,EAAG;MACnBC,eAAe,EAAE,EAAG;MACpBC,cAAc,EAAE;QAAEd,IAAI,EAAE,OAAO;QAAEC,SAAS,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC;MAAE,CAAE;MAChEc,OAAO,EAAE,IAAK;MACdC,eAAe,EAAE,EAAG;MACpBC,aAAa,EAAE;IAAG;MAAApC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;;AAED;AACA,SAAST,mBAAmBA,CAACT,QAAQ,EAAE;EACrC,QAAQA,QAAQ;IACd,KAAK,UAAU;MACb,OAAO,SAAS;IAAE;IACpB,KAAK,MAAM;MACT,OAAO,SAAS;IAAE;IACpB,KAAK,QAAQ;MACX,OAAO,SAAS;IAAE;IACpB,KAAK,KAAK;MACR,OAAO,SAAS;IAAE;IACpB;MACE,OAAO,SAAS;IAAE;EACtB;AACF;AAEA,eAAehB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}