{"ast":null,"code":"import axios from 'axios';\n\n// Define API base URL with full URL path\nconst API_BASE_URL = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api' : 'http://localhost:8080/api'; // Always use absolute URL in development\n\nconsole.log('API Base URL:', API_BASE_URL); // Debug logging\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for auth tokens, etc.\napiClient.interceptors.request.use(config => {\n  // You can add auth tokens here when you implement authentication\n  // const token = localStorage.getItem('token');\n  // if (token) {\n  //   config.headers.Authorization = `Bearer ${token}`;\n  // }\n  return config;\n}, error => Promise.reject(error));\n\n// Add response interceptor for error handling\napiClient.interceptors.response.use(response => response, error => {\n  // Handle common errors\n  if (error.response) {\n    // Server responded with error status\n    console.error('API Error:', error.response.data);\n\n    // Handle specific status codes\n    switch (error.response.status) {\n      case 401:\n        // Handle unauthorized\n        console.log('Unauthorized access');\n        // Redirect to login or refresh token\n        break;\n      case 404:\n        console.log('Resource not found');\n        break;\n      default:\n        break;\n    }\n  } else if (error.request) {\n    // Request made but no response\n    console.error('No response received:', error.request);\n  } else {\n    // Error in request setup\n    console.error('Request error:', error.message);\n  }\n  return Promise.reject(error);\n});\n\n// API Methods\nconst api = {\n  // Project endpoints\n  projects: {\n    getAll: () => apiClient.get('/projects'),\n    getById: id => apiClient.get(`/projects/${id}`),\n    create: data => apiClient.post('/projects', data),\n    update: (id, data) => apiClient.put(`/projects/${id}`, data),\n    delete: id => apiClient.delete(`/projects/${id}`),\n    toggleStatus: id => apiClient.patch(`/projects/${id}/toggle-status`),\n    getPomFromDefaultPath: id => apiClient.get(`/projects/${id}/pom`)\n  },\n  // Dependency analysis endpoints\n  dependencyAnalysis: {\n    getAll: () => apiClient.get('/analyses'),\n    getById: id => apiClient.get(`/analyses/${id}`),\n    getByProject: projectId => apiClient.get(`/analyses/project/${projectId}`),\n    getLatestByProject: projectId => apiClient.get(`/analyses/project/${projectId}/latest`),\n    create: (projectId, data) => apiClient.post(`/analyses/project/${projectId}`, data),\n    getVulnerabilityStatus: id => apiClient.get(`/analyses/${id}/vulnerability-status`),\n    updateDependencyVersion: (dependencyId, newVersion) => apiClient.patch(`/analyses/dependencies/${dependencyId}/version?newVersion=${newVersion}`),\n    downloadUpdatedPom: analysisId => {\n      window.open(`${API_BASE_URL}/analyses/${analysisId}/updated-pom`, '_blank');\n    },\n    delete: analysisId => {\n      // Ensure analysisId is a number\n      const id = typeof analysisId === 'string' ? parseInt(analysisId, 10) : analysisId;\n      if (isNaN(id)) {\n        console.error('Invalid analysis ID for deletion:', analysisId);\n        return Promise.reject(new Error('Invalid analysis ID format'));\n      }\n      console.log(`Making DELETE request to ${API_BASE_URL}/analyses/${id}`);\n      return apiClient.delete(`/analyses/${id}`).then(response => {\n        console.log('Delete successful:', response);\n        return response;\n      }).catch(error => {\n        var _error$response, _error$response2, _error$response3;\n        console.error('Delete request failed:', error);\n        console.error('Request details:', {\n          url: `${API_BASE_URL}/analyses/${id}`,\n          method: 'DELETE',\n          status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n          statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n          data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n        });\n        throw error;\n      });\n    },\n    uploadPom: (projectId, file) => {\n      const formData = new FormData();\n      formData.append('file', file);\n      return apiClient.post(`/projects/${projectId}/pom-upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n    },\n    // Initiates an analysis and handles immediate redirection to the analysis detail page\n    startAnalysisAndRedirect: async (projectId, data, navigate, toastFn) => {\n      try {\n        console.log('Starting analysis with immediate redirection');\n        let response;\n        if (projectId) {\n          // If we have a projectId, use the project-specific endpoint\n          response = await apiClient.post(`/analyses/project/${projectId}`, data);\n        } else {\n          // If no projectId, use the general analyses endpoint\n          response = await apiClient.post('/analyses', data);\n        }\n        const analysisId = response.data.id;\n        if (!analysisId) {\n          console.error('No analysis ID returned from API');\n          if (toastFn) toastFn.error('Failed to start analysis: No analysis ID returned');\n          return null;\n        }\n        console.log(`Analysis started with ID: ${analysisId}, redirecting immediately`);\n\n        // Show notification if provided\n        if (toastFn) {\n          toastFn.success('Analysis started! Redirecting to results page where vulnerability scanning will continue in the background.');\n        }\n\n        // Redirect immediately to the analysis detail page\n        if (navigate) {\n          navigate(`/analysis/${analysisId}`, {\n            state: {\n              alert: {\n                type: 'success',\n                message: 'Analysis initiated successfully. Vulnerability scanning will continue in the background.'\n              }\n            }\n          });\n        }\n        return response;\n      } catch (error) {\n        console.error('Error starting analysis:', error);\n        if (toastFn) toastFn.error(`Failed to start analysis: ${error.message || 'Unknown error'}`);\n        throw error;\n      }\n    }\n  },\n  // Dashboard endpoints\n  dashboard: {\n    getStats: () => apiClient.get('/dashboard/stats')\n  },\n  // Chart endpoints\n  charts: {\n    getDependencyUpdates: analysisId => apiClient.get(`/charts/dependency-updates/${analysisId}`),\n    getVulnerabilities: analysisId => apiClient.get(`/charts/vulnerabilities/${analysisId}`),\n    getLicenseDistribution: analysisId => apiClient.get(`/charts/license-distribution/${analysisId}`),\n    getDependencyStatusData: analysisId => apiClient.get(`/charts/data/dependency-status/${analysisId}`),\n    getVulnerabilityStatusData: analysisId => apiClient.get(`/charts/data/vulnerability-status/${analysisId}`),\n    getVulnerabilitySeverityData: analysisId => apiClient.get(`/charts/data/vulnerability-severity/${analysisId}`),\n    getLicenseDistributionData: analysisId => apiClient.get(`/charts/data/license-distribution/${analysisId}`)\n  },\n  // Report endpoints\n  reports: {\n    generateFullReport: analysisId => apiClient.get(`/reports/full/${analysisId}`),\n    downloadReport: fileName => {\n      window.open(`${API_BASE_URL}/reports/download/${fileName}`, '_blank');\n    }\n  },\n  // Settings endpoints\n  settings: {\n    getSettings: () => {\n      console.log('Getting settings from:', `${API_BASE_URL}/settings`);\n      return apiClient.get('/settings');\n    },\n    updateSettings: data => {\n      console.log('Updating settings at:', `${API_BASE_URL}/settings`, 'with data:', data);\n      return apiClient.put('/settings', data);\n    }\n  },\n  // Cache management endpoints\n  cache: {\n    clearAll: () => apiClient.delete('/cache'),\n    clearVulnerabilities: () => apiClient.delete('/cache/vulnerability'),\n    clearLicenses: () => apiClient.delete('/cache/license'),\n    clearCharts: () => apiClient.delete('/cache/chart'),\n    clearVersions: () => apiClient.delete('/cache/version')\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","REACT_APP_API_BASE_URL","console","log","apiClient","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","data","status","message","api","projects","getAll","get","getById","id","post","update","put","delete","toggleStatus","patch","getPomFromDefaultPath","dependencyAnalysis","getByProject","projectId","getLatestByProject","getVulnerabilityStatus","updateDependencyVersion","dependencyId","newVersion","downloadUpdatedPom","analysisId","window","open","parseInt","isNaN","Error","then","catch","_error$response","_error$response2","_error$response3","url","method","statusText","uploadPom","file","formData","FormData","append","startAnalysisAndRedirect","navigate","toastFn","success","state","alert","type","dashboard","getStats","charts","getDependencyUpdates","getVulnerabilities","getLicenseDistribution","getDependencyStatusData","getVulnerabilityStatusData","getVulnerabilitySeverityData","getLicenseDistributionData","reports","generateFullReport","downloadReport","fileName","settings","getSettings","updateSettings","cache","clearAll","clearVulnerabilities","clearLicenses","clearCharts","clearVersions"],"sources":["/Users/yeldan/IdeaProjects/MavenAnalyzer/MavenAnalyzerUI/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Define API base URL with full URL path\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? (process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api')\n  : 'http://localhost:8080/api'; // Always use absolute URL in development\n\nconsole.log('API Base URL:', API_BASE_URL); // Debug logging\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor for auth tokens, etc.\napiClient.interceptors.request.use(\n  (config) => {\n    // You can add auth tokens here when you implement authentication\n    // const token = localStorage.getItem('token');\n    // if (token) {\n    //   config.headers.Authorization = `Bearer ${token}`;\n    // }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Add response interceptor for error handling\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Handle common errors\n    if (error.response) {\n      // Server responded with error status\n      console.error('API Error:', error.response.data);\n      \n      // Handle specific status codes\n      switch (error.response.status) {\n        case 401:\n          // Handle unauthorized\n          console.log('Unauthorized access');\n          // Redirect to login or refresh token\n          break;\n        case 404:\n          console.log('Resource not found');\n          break;\n        default:\n          break;\n      }\n    } else if (error.request) {\n      // Request made but no response\n      console.error('No response received:', error.request);\n    } else {\n      // Error in request setup\n      console.error('Request error:', error.message);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API Methods\nconst api = {\n  // Project endpoints\n  projects: {\n    getAll: () => apiClient.get('/projects'),\n    getById: (id) => apiClient.get(`/projects/${id}`),\n    create: (data) => apiClient.post('/projects', data),\n    update: (id, data) => apiClient.put(`/projects/${id}`, data),\n    delete: (id) => apiClient.delete(`/projects/${id}`),\n    toggleStatus: (id) => apiClient.patch(`/projects/${id}/toggle-status`),\n    getPomFromDefaultPath: (id) => apiClient.get(`/projects/${id}/pom`),\n  },\n  \n  // Dependency analysis endpoints\n  dependencyAnalysis: {\n    getAll: () => apiClient.get('/analyses'),\n    getById: (id) => apiClient.get(`/analyses/${id}`),\n    getByProject: (projectId) => apiClient.get(`/analyses/project/${projectId}`),\n    getLatestByProject: (projectId) => apiClient.get(`/analyses/project/${projectId}/latest`),\n    create: (projectId, data) => apiClient.post(`/analyses/project/${projectId}`, data),\n    getVulnerabilityStatus: (id) => apiClient.get(`/analyses/${id}/vulnerability-status`),\n    updateDependencyVersion: (dependencyId, newVersion) => \n      apiClient.patch(`/analyses/dependencies/${dependencyId}/version?newVersion=${newVersion}`),\n    downloadUpdatedPom: (analysisId) => {\n      window.open(`${API_BASE_URL}/analyses/${analysisId}/updated-pom`, '_blank');\n    },\n    delete: (analysisId) => {\n      // Ensure analysisId is a number\n      const id = typeof analysisId === 'string' ? parseInt(analysisId, 10) : analysisId;\n      \n      if (isNaN(id)) {\n        console.error('Invalid analysis ID for deletion:', analysisId);\n        return Promise.reject(new Error('Invalid analysis ID format'));\n      }\n      \n      console.log(`Making DELETE request to ${API_BASE_URL}/analyses/${id}`);\n      \n      return apiClient.delete(`/analyses/${id}`)\n        .then(response => {\n          console.log('Delete successful:', response);\n          return response;\n        })\n        .catch(error => {\n          console.error('Delete request failed:', error);\n          console.error('Request details:', {\n            url: `${API_BASE_URL}/analyses/${id}`,\n            method: 'DELETE',\n            status: error.response?.status,\n            statusText: error.response?.statusText,\n            data: error.response?.data\n          });\n          throw error;\n        });\n    },\n    uploadPom: (projectId, file) => {\n      const formData = new FormData();\n      formData.append('file', file);\n      return apiClient.post(`/projects/${projectId}/pom-upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n    },\n    // Initiates an analysis and handles immediate redirection to the analysis detail page\n    startAnalysisAndRedirect: async (projectId, data, navigate, toastFn) => {\n      try {\n        console.log('Starting analysis with immediate redirection');\n        let response;\n        \n        if (projectId) {\n          // If we have a projectId, use the project-specific endpoint\n          response = await apiClient.post(`/analyses/project/${projectId}`, data);\n        } else {\n          // If no projectId, use the general analyses endpoint\n          response = await apiClient.post('/analyses', data);\n        }\n        \n        const analysisId = response.data.id;\n        if (!analysisId) {\n          console.error('No analysis ID returned from API');\n          if (toastFn) toastFn.error('Failed to start analysis: No analysis ID returned');\n          return null;\n        }\n        \n        console.log(`Analysis started with ID: ${analysisId}, redirecting immediately`);\n        \n        // Show notification if provided\n        if (toastFn) {\n          toastFn.success('Analysis started! Redirecting to results page where vulnerability scanning will continue in the background.');\n        }\n        \n        // Redirect immediately to the analysis detail page\n        if (navigate) {\n          navigate(`/analysis/${analysisId}`, { \n            state: { alert: { type: 'success', message: 'Analysis initiated successfully. Vulnerability scanning will continue in the background.' } }\n          });\n        }\n        \n        return response;\n      } catch (error) {\n        console.error('Error starting analysis:', error);\n        if (toastFn) toastFn.error(`Failed to start analysis: ${error.message || 'Unknown error'}`);\n        throw error;\n      }\n    }\n  },\n  \n  // Dashboard endpoints\n  dashboard: {\n    getStats: () => apiClient.get('/dashboard/stats')\n  },\n  \n  // Chart endpoints\n  charts: {\n    getDependencyUpdates: (analysisId) => apiClient.get(`/charts/dependency-updates/${analysisId}`),\n    getVulnerabilities: (analysisId) => apiClient.get(`/charts/vulnerabilities/${analysisId}`),\n    getLicenseDistribution: (analysisId) => apiClient.get(`/charts/license-distribution/${analysisId}`),\n    getDependencyStatusData: (analysisId) => apiClient.get(`/charts/data/dependency-status/${analysisId}`),\n    getVulnerabilityStatusData: (analysisId) => apiClient.get(`/charts/data/vulnerability-status/${analysisId}`),\n    getVulnerabilitySeverityData: (analysisId) => apiClient.get(`/charts/data/vulnerability-severity/${analysisId}`),\n    getLicenseDistributionData: (analysisId) => apiClient.get(`/charts/data/license-distribution/${analysisId}`),\n  },\n  \n  // Report endpoints\n  reports: {\n    generateFullReport: (analysisId) => apiClient.get(`/reports/full/${analysisId}`),\n    downloadReport: (fileName) => {\n      window.open(`${API_BASE_URL}/reports/download/${fileName}`, '_blank');\n    }\n  },\n  \n  // Settings endpoints\n  settings: {\n    getSettings: () => {\n      console.log('Getting settings from:', `${API_BASE_URL}/settings`);\n      return apiClient.get('/settings');\n    },\n    updateSettings: (data) => {\n      console.log('Updating settings at:', `${API_BASE_URL}/settings`, 'with data:', data);\n      return apiClient.put('/settings', data);\n    },\n  },\n  \n  // Cache management endpoints\n  cache: {\n    clearAll: () => apiClient.delete('/cache'),\n    clearVulnerabilities: () => apiClient.delete('/cache/vulnerability'),\n    clearLicenses: () => apiClient.delete('/cache/license'),\n    clearCharts: () => apiClient.delete('/cache/chart'),\n    clearVersions: () => apiClient.delete('/cache/version')\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}