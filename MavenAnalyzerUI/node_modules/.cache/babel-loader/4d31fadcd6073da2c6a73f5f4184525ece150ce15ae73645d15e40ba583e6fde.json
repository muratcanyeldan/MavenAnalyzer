{"ast":null,"code":"var _jsxFileName = \"/Users/yeldan/IdeaProjects/MavenAnalyzer/MavenAnalyzerUI/src/pages/Settings.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Typography, Paper, Box, Grid, TextField, Button, Divider, List, ListItem, ListItemText, ListItemIcon, Switch, FormControl, FormControlLabel, Select, MenuItem, Alert, Tabs, Tab, InputAdornment, Card, CardContent, CardHeader, Snackbar } from '@mui/material';\nimport { Save as SaveIcon, Refresh as RefreshIcon, Security as SecurityIcon, Storage as StorageIcon, Notifications as NotificationsIcon, AccountCircle as AccountCircleIcon, Settings as SettingsIcon, CloudDownload as CloudDownloadIcon } from '@mui/icons-material';\nimport { ColorModeContext } from '../App';\n\n// Tab panel component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `settings-tabpanel-${index}`,\n    \"aria-labelledby\": `settings-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n// Function to save settings to localStorage for now (can be replaced with API call later)\nconst saveSettingsToStorage = settings => {\n  localStorage.setItem('mavenAnalyzerSettings', JSON.stringify(settings));\n  return Promise.resolve({\n    success: true\n  });\n};\n\n// Function to load settings from localStorage (can be replaced with API call later)\nconst loadSettingsFromStorage = () => {\n  const saved = localStorage.getItem('mavenAnalyzerSettings');\n  return Promise.resolve(saved ? JSON.parse(saved) : null);\n};\nconst Settings = () => {\n  const colorMode = useContext(ColorModeContext);\n  const [tabValue, setTabValue] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [settings, setSettings] = useState({\n    // General settings\n    darkMode: colorMode.mode === 'dark',\n    showNotifications: true,\n    // Maven settings\n    mavenPath: '/usr/bin/mvn',\n    mavenRepoPath: '~/.m2/repository',\n    // License settings\n    licenseChecking: true,\n    restrictedLicenses: ['GPL', 'AGPL'],\n    // Vulnerability settings\n    vulnerabilityChecking: true,\n    vulnerabilityCheckDelay: 0,\n    // Chart settings\n    defaultChartType: 'pie',\n    // Cache settings\n    cacheEnabled: true,\n    cacheDuration: 24\n  });\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n\n  // Load settings when component mounts\n  useEffect(() => {\n    setLoading(true);\n    loadSettingsFromStorage().then(savedSettings => {\n      if (savedSettings) {\n        // Apply saved settings\n        setSettings(prev => ({\n          ...prev,\n          ...savedSettings,\n          // Keep dark mode in sync with app state\n          darkMode: colorMode.mode === 'dark'\n        }));\n\n        // Apply dark mode if it differs from current app state\n        if (savedSettings.darkMode !== (colorMode.mode === 'dark')) {\n          colorMode.toggleColorMode();\n        }\n      }\n    }).catch(error => {\n      console.error('Error loading settings:', error);\n      setSnackbar({\n        open: true,\n        message: 'Failed to load settings',\n        severity: 'error'\n      });\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  // Effect to sync the dark mode state when it changes externally\n  useEffect(() => {\n    setSettings(prev => ({\n      ...prev,\n      darkMode: colorMode.mode === 'dark'\n    }));\n  }, [colorMode.mode]);\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  const handleSettingChange = (setting, value) => {\n    setSettings({\n      ...settings,\n      [setting]: value\n    });\n\n    // Special handling for dark mode to update application theme\n    if (setting === 'darkMode' && value !== (colorMode.mode === 'dark')) {\n      colorMode.toggleColorMode();\n    }\n  };\n  const handleSave = () => {\n    // Save settings to backend/localStorage\n    saveSettingsToStorage(settings).then(() => {\n      // Show success message\n      setSnackbar({\n        open: true,\n        message: 'Settings saved successfully',\n        severity: 'success'\n      });\n    }).catch(error => {\n      console.error('Error saving settings:', error);\n      setSnackbar({\n        open: true,\n        message: 'Failed to save settings',\n        severity: 'error'\n      });\n    });\n  };\n  const handleReset = () => {\n    // Reset to default values\n    const defaultSettings = {\n      darkMode: false,\n      showNotifications: true,\n      mavenPath: '/usr/bin/mvn',\n      mavenRepoPath: '~/.m2/repository',\n      licenseChecking: true,\n      restrictedLicenses: ['GPL', 'AGPL'],\n      vulnerabilityChecking: true,\n      vulnerabilityCheckDelay: 0,\n      defaultChartType: 'pie',\n      cacheEnabled: true,\n      cacheDuration: 24\n    };\n    setSettings(defaultSettings);\n\n    // If dark mode is currently enabled, switch to light mode\n    if (colorMode.mode === 'dark') {\n      colorMode.toggleColorMode();\n    }\n\n    // Show info message\n    setSnackbar({\n      open: true,\n      message: 'Settings reset to defaults',\n      severity: 'info'\n    });\n  };\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false\n    });\n  };\n  const handleClearCache = () => {\n    // In a real app, this would call an API to clear the server-side cache\n    // For now, we'll just show a success message\n    setSnackbar({\n      open: true,\n      message: 'Cache cleared successfully',\n      severity: 'success'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(SettingsIcon, {\n        sx: {\n          mr: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabValue,\n          onChange: handleTabChange,\n          \"aria-label\": \"settings tabs\",\n          variant: \"scrollable\",\n          scrollButtons: \"auto\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"General\",\n            icon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 40\n            }, this),\n            iconPosition: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Maven Configuration\",\n            icon: /*#__PURE__*/_jsxDEV(StorageIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 52\n            }, this),\n            iconPosition: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"License Checking\",\n            icon: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 49\n            }, this),\n            iconPosition: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Vulnerability Scanning\",\n            icon: /*#__PURE__*/_jsxDEV(SecurityIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 55\n            }, this),\n            iconPosition: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Updates & Cache\",\n            icon: /*#__PURE__*/_jsxDEV(CloudDownloadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 48\n            }, this),\n            iconPosition: \"start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 0,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Application Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(List, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 273,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: \"Dark Mode\",\n                      secondary: \"Enable dark theme for the application\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                      edge: \"end\",\n                      checked: settings.darkMode,\n                      onChange: e => handleSettingChange('darkMode', e.target.checked)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                      children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 288,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: \"Notifications\",\n                      secondary: \"Show notifications for completed analyses\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                      edge: \"end\",\n                      checked: settings.showNotifications,\n                      onChange: e => handleSettingChange('showNotifications', e.target.checked)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 1,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Maven Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 3\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Maven Path\",\n                    variant: \"outlined\",\n                    value: settings.mavenPath,\n                    onChange: e => handleSettingChange('mavenPath', e.target.value),\n                    helperText: \"Path to Maven executable (mvn)\",\n                    margin: \"normal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Maven Repository Path\",\n                    variant: \"outlined\",\n                    value: settings.mavenRepoPath,\n                    onChange: e => handleSettingChange('mavenRepoPath', e.target.value),\n                    helperText: \"Path to local Maven repository\",\n                    margin: \"normal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                  severity: \"info\",\n                  sx: {\n                    mt: 2\n                  },\n                  children: \"Configure these settings only if you want to use a custom Maven installation. If left blank, the system will use the default Maven installation.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"License Checking Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 3\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Switch, {\n                      checked: settings.licenseChecking,\n                      onChange: e => handleSettingChange('licenseChecking', e.target.checked)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 25\n                    }, this),\n                    label: \"Enable License Checking\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    sx: {\n                      mt: 1,\n                      mb: 2\n                    },\n                    children: \"When enabled, the system will check dependency licenses and flag potentially problematic licenses.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Restricted Licenses\",\n                    variant: \"outlined\",\n                    value: settings.restrictedLicenses.join(', '),\n                    onChange: e => handleSettingChange('restrictedLicenses', e.target.value.split(',').map(item => item.trim())),\n                    helperText: \"Comma-separated list of license types to flag as restricted\",\n                    margin: \"normal\",\n                    disabled: !settings.licenseChecking\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Vulnerability Scanning Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 3\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Switch, {\n                      checked: settings.vulnerabilityChecking,\n                      onChange: e => handleSettingChange('vulnerabilityChecking', e.target.checked)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 25\n                    }, this),\n                    label: \"Enable Vulnerability Scanning\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    sx: {\n                      mt: 1,\n                      mb: 2\n                    },\n                    children: \"When enabled, the system will check for known vulnerabilities in dependencies.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Vulnerability Check Delay (seconds)\",\n                    variant: \"outlined\",\n                    type: \"number\",\n                    value: settings.vulnerabilityCheckDelay,\n                    onChange: e => handleSettingChange('vulnerabilityCheckDelay', parseInt(e.target.value)),\n                    helperText: \"Delay between vulnerability checks to avoid API rate limits (0 for no delay)\",\n                    margin: \"normal\",\n                    disabled: !settings.vulnerabilityChecking,\n                    InputProps: {\n                      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"end\",\n                        children: \"seconds\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 427,\n                        columnNumber: 39\n                      }, this)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Updates & Cache Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 3\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Switch, {\n                      checked: settings.cacheEnabled,\n                      onChange: e => handleSettingChange('cacheEnabled', e.target.checked)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 450,\n                      columnNumber: 25\n                    }, this),\n                    label: \"Enable Cache\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    sx: {\n                      mt: 1,\n                      mb: 2\n                    },\n                    children: \"Cache Maven Central responses to improve performance and reduce API calls\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Cache Duration\",\n                    variant: \"outlined\",\n                    type: \"number\",\n                    value: settings.cacheDuration,\n                    onChange: e => handleSettingChange('cacheDuration', parseInt(e.target.value)),\n                    helperText: \"How long to keep cached data (in hours)\",\n                    margin: \"normal\",\n                    disabled: !settings.cacheEnabled,\n                    InputProps: {\n                      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"end\",\n                        children: \"hours\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 473,\n                        columnNumber: 39\n                      }, this)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mt: 2\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 480,\n                        columnNumber: 36\n                      }, this),\n                      onClick: handleClearCache,\n                      disabled: !settings.cacheEnabled,\n                      children: \"Clear Cache\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 478,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  sx: {\n                    my: 2\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 3\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: \"Default Chart Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    margin: \"normal\",\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      value: settings.defaultChartType,\n                      onChange: e => handleSettingChange('defaultChartType', e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"pie\",\n                        children: \"Pie Chart\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"bar\",\n                        children: \"Bar Chart\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 502,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"line\",\n                        children: \"Line Chart\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 503,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          display: 'flex',\n          justifyContent: 'flex-end'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 24\n          }, this),\n          onClick: handleReset,\n          sx: {\n            mr: 2\n          },\n          children: \"Reset to Defaults\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 24\n          }, this),\n          onClick: handleSave,\n          children: \"Save Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 5000,\n      onClose: handleCloseSnackbar,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbar.severity,\n        sx: {\n          width: '100%'\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\nexport default Settings;","map":{"version":3,"names":["React","useState","useContext","useEffect","Typography","Paper","Box","Grid","TextField","Button","Divider","List","ListItem","ListItemText","ListItemIcon","Switch","FormControl","FormControlLabel","Select","MenuItem","Alert","Tabs","Tab","InputAdornment","Card","CardContent","CardHeader","Snackbar","Save","SaveIcon","Refresh","RefreshIcon","Security","SecurityIcon","Storage","StorageIcon","Notifications","NotificationsIcon","AccountCircle","AccountCircleIcon","Settings","SettingsIcon","CloudDownload","CloudDownloadIcon","ColorModeContext","jsxDEV","_jsxDEV","Fragment","_Fragment","TabPanel","props","children","value","index","other","role","hidden","id","sx","p","fileName","_jsxFileName","lineNumber","columnNumber","saveSettingsToStorage","settings","localStorage","setItem","JSON","stringify","Promise","resolve","success","loadSettingsFromStorage","saved","getItem","parse","colorMode","tabValue","setTabValue","loading","setLoading","setSettings","darkMode","mode","showNotifications","mavenPath","mavenRepoPath","licenseChecking","restrictedLicenses","vulnerabilityChecking","vulnerabilityCheckDelay","defaultChartType","cacheEnabled","cacheDuration","snackbar","setSnackbar","open","message","severity","then","savedSettings","prev","toggleColorMode","catch","error","console","finally","handleTabChange","event","newValue","handleSettingChange","setting","handleSave","handleReset","defaultSettings","handleCloseSnackbar","handleClearCache","display","alignItems","mb","mr","variant","component","borderBottom","borderColor","onChange","scrollButtons","label","icon","iconPosition","gutterBottom","container","spacing","item","xs","md","primary","secondary","edge","checked","e","target","fullWidth","helperText","margin","mt","control","color","join","split","map","trim","disabled","type","parseInt","InputProps","endAdornment","position","startIcon","onClick","my","justifyContent","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","width"],"sources":["/Users/yeldan/IdeaProjects/MavenAnalyzer/MavenAnalyzerUI/src/pages/Settings.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport {\n  Typography,\n  Paper,\n  Box,\n  Grid,\n  TextField,\n  Button,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Switch,\n  FormControl,\n  FormControlLabel,\n  Select,\n  MenuItem,\n  Alert,\n  Tabs,\n  Tab,\n  InputAdornment,\n  Card,\n  CardContent,\n  CardHeader,\n  Snackbar,\n} from '@mui/material';\nimport {\n  Save as SaveIcon,\n  Refresh as RefreshIcon,\n  Security as SecurityIcon,\n  Storage as StorageIcon,\n  Notifications as NotificationsIcon,\n  AccountCircle as AccountCircleIcon,\n  Settings as SettingsIcon,\n  CloudDownload as CloudDownloadIcon,\n} from '@mui/icons-material';\nimport { ColorModeContext } from '../App';\n\n// Tab panel component\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`settings-tabpanel-${index}`}\n      aria-labelledby={`settings-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\n// Function to save settings to localStorage for now (can be replaced with API call later)\nconst saveSettingsToStorage = (settings) => {\n  localStorage.setItem('mavenAnalyzerSettings', JSON.stringify(settings));\n  return Promise.resolve({ success: true });\n};\n\n// Function to load settings from localStorage (can be replaced with API call later)\nconst loadSettingsFromStorage = () => {\n  const saved = localStorage.getItem('mavenAnalyzerSettings');\n  return Promise.resolve(saved ? JSON.parse(saved) : null);\n};\n\nconst Settings = () => {\n  const colorMode = useContext(ColorModeContext);\n  const [tabValue, setTabValue] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [settings, setSettings] = useState({\n    // General settings\n    darkMode: colorMode.mode === 'dark',\n    showNotifications: true,\n    \n    // Maven settings\n    mavenPath: '/usr/bin/mvn',\n    mavenRepoPath: '~/.m2/repository',\n    \n    // License settings\n    licenseChecking: true,\n    restrictedLicenses: ['GPL', 'AGPL'],\n    \n    // Vulnerability settings\n    vulnerabilityChecking: true,\n    vulnerabilityCheckDelay: 0,\n    \n    // Chart settings\n    defaultChartType: 'pie',\n    \n    // Cache settings\n    cacheEnabled: true,\n    cacheDuration: 24,\n  });\n  \n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n\n  // Load settings when component mounts\n  useEffect(() => {\n    setLoading(true);\n    loadSettingsFromStorage()\n      .then(savedSettings => {\n        if (savedSettings) {\n          // Apply saved settings\n          setSettings(prev => ({\n            ...prev,\n            ...savedSettings,\n            // Keep dark mode in sync with app state\n            darkMode: colorMode.mode === 'dark'\n          }));\n          \n          // Apply dark mode if it differs from current app state\n          if (savedSettings.darkMode !== (colorMode.mode === 'dark')) {\n            colorMode.toggleColorMode();\n          }\n        }\n      })\n      .catch(error => {\n        console.error('Error loading settings:', error);\n        setSnackbar({\n          open: true,\n          message: 'Failed to load settings',\n          severity: 'error'\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  // Effect to sync the dark mode state when it changes externally\n  useEffect(() => {\n    setSettings(prev => ({\n      ...prev,\n      darkMode: colorMode.mode === 'dark'\n    }));\n  }, [colorMode.mode]);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  \n  const handleSettingChange = (setting, value) => {\n    setSettings({\n      ...settings,\n      [setting]: value\n    });\n    \n    // Special handling for dark mode to update application theme\n    if (setting === 'darkMode' && value !== (colorMode.mode === 'dark')) {\n      colorMode.toggleColorMode();\n    }\n  };\n  \n  const handleSave = () => {\n    // Save settings to backend/localStorage\n    saveSettingsToStorage(settings)\n      .then(() => {\n        // Show success message\n        setSnackbar({\n          open: true,\n          message: 'Settings saved successfully',\n          severity: 'success'\n        });\n      })\n      .catch(error => {\n        console.error('Error saving settings:', error);\n        setSnackbar({\n          open: true,\n          message: 'Failed to save settings',\n          severity: 'error'\n        });\n      });\n  };\n  \n  const handleReset = () => {\n    // Reset to default values\n    const defaultSettings = {\n      darkMode: false,\n      showNotifications: true,\n      mavenPath: '/usr/bin/mvn',\n      mavenRepoPath: '~/.m2/repository',\n      licenseChecking: true,\n      restrictedLicenses: ['GPL', 'AGPL'],\n      vulnerabilityChecking: true,\n      vulnerabilityCheckDelay: 0,\n      defaultChartType: 'pie',\n      cacheEnabled: true,\n      cacheDuration: 24,\n    };\n    \n    setSettings(defaultSettings);\n    \n    // If dark mode is currently enabled, switch to light mode\n    if (colorMode.mode === 'dark') {\n      colorMode.toggleColorMode();\n    }\n    \n    // Show info message\n    setSnackbar({\n      open: true,\n      message: 'Settings reset to defaults',\n      severity: 'info'\n    });\n  };\n  \n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false\n    });\n  };\n\n  const handleClearCache = () => {\n    // In a real app, this would call an API to clear the server-side cache\n    // For now, we'll just show a success message\n    setSnackbar({\n      open: true,\n      message: 'Cache cleared successfully',\n      severity: 'success'\n    });\n  };\n\n  return (\n    <>\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n        <SettingsIcon sx={{ mr: 1 }} />\n        <Typography variant=\"h4\" component=\"h1\">\n          Settings\n        </Typography>\n      </Box>\n      \n      <Paper sx={{ mb: 4 }}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs\n            value={tabValue}\n            onChange={handleTabChange}\n            aria-label=\"settings tabs\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            <Tab label=\"General\" icon={<SettingsIcon />} iconPosition=\"start\" />\n            <Tab label=\"Maven Configuration\" icon={<StorageIcon />} iconPosition=\"start\" />\n            <Tab label=\"License Checking\" icon={<AccountCircleIcon />} iconPosition=\"start\" />\n            <Tab label=\"Vulnerability Scanning\" icon={<SecurityIcon />} iconPosition=\"start\" />\n            <Tab label=\"Updates & Cache\" icon={<CloudDownloadIcon />} iconPosition=\"start\" />\n          </Tabs>\n        </Box>\n        \n        {/* General Settings */}\n        <TabPanel value={tabValue} index={0}>\n          <Typography variant=\"h6\" gutterBottom>\n            Application Settings\n          </Typography>\n          \n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <Card>\n                <CardContent>\n                  <List>\n                    <ListItem>\n                      <ListItemIcon>\n                        <SettingsIcon />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Dark Mode\" \n                        secondary=\"Enable dark theme for the application\" \n                      />\n                      <Switch\n                        edge=\"end\"\n                        checked={settings.darkMode}\n                        onChange={(e) => handleSettingChange('darkMode', e.target.checked)}\n                      />\n                    </ListItem>\n                    <Divider />\n                    <ListItem>\n                      <ListItemIcon>\n                        <NotificationsIcon />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary=\"Notifications\" \n                        secondary=\"Show notifications for completed analyses\" \n                      />\n                      <Switch\n                        edge=\"end\"\n                        checked={settings.showNotifications}\n                        onChange={(e) => handleSettingChange('showNotifications', e.target.checked)}\n                      />\n                    </ListItem>\n                  </List>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </TabPanel>\n        \n        {/* Maven Configuration */}\n        <TabPanel value={tabValue} index={1}>\n          <Typography variant=\"h6\" gutterBottom>\n            Maven Configuration\n          </Typography>\n          \n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <Card>\n                <CardContent>\n                  <Box sx={{ mb: 3 }}>\n                    <TextField\n                      fullWidth\n                      label=\"Maven Path\"\n                      variant=\"outlined\"\n                      value={settings.mavenPath}\n                      onChange={(e) => handleSettingChange('mavenPath', e.target.value)}\n                      helperText=\"Path to Maven executable (mvn)\"\n                      margin=\"normal\"\n                    />\n                    \n                    <TextField\n                      fullWidth\n                      label=\"Maven Repository Path\"\n                      variant=\"outlined\"\n                      value={settings.mavenRepoPath}\n                      onChange={(e) => handleSettingChange('mavenRepoPath', e.target.value)}\n                      helperText=\"Path to local Maven repository\"\n                      margin=\"normal\"\n                    />\n                  </Box>\n                  \n                  <Alert severity=\"info\" sx={{ mt: 2 }}>\n                    Configure these settings only if you want to use a custom Maven installation.\n                    If left blank, the system will use the default Maven installation.\n                  </Alert>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </TabPanel>\n        \n        {/* License Settings */}\n        <TabPanel value={tabValue} index={2}>\n          <Typography variant=\"h6\" gutterBottom>\n            License Checking Configuration\n          </Typography>\n          \n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <Card>\n                <CardContent>\n                  <Box sx={{ mb: 3 }}>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={settings.licenseChecking}\n                          onChange={(e) => handleSettingChange('licenseChecking', e.target.checked)}\n                        />\n                      }\n                      label=\"Enable License Checking\"\n                    />\n                    \n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1, mb: 2 }}>\n                      When enabled, the system will check dependency licenses and flag potentially problematic licenses.\n                    </Typography>\n                    \n                    <TextField\n                      fullWidth\n                      label=\"Restricted Licenses\"\n                      variant=\"outlined\"\n                      value={settings.restrictedLicenses.join(', ')}\n                      onChange={(e) => handleSettingChange('restrictedLicenses', e.target.value.split(',').map(item => item.trim()))}\n                      helperText=\"Comma-separated list of license types to flag as restricted\"\n                      margin=\"normal\"\n                      disabled={!settings.licenseChecking}\n                    />\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </TabPanel>\n        \n        {/* Vulnerability Settings */}\n        <TabPanel value={tabValue} index={3}>\n          <Typography variant=\"h6\" gutterBottom>\n            Vulnerability Scanning Configuration\n          </Typography>\n          \n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <Card>\n                <CardContent>\n                  <Box sx={{ mb: 3 }}>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={settings.vulnerabilityChecking}\n                          onChange={(e) => handleSettingChange('vulnerabilityChecking', e.target.checked)}\n                        />\n                      }\n                      label=\"Enable Vulnerability Scanning\"\n                    />\n                    \n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1, mb: 2 }}>\n                      When enabled, the system will check for known vulnerabilities in dependencies.\n                    </Typography>\n                    \n                    <TextField\n                      fullWidth\n                      label=\"Vulnerability Check Delay (seconds)\"\n                      variant=\"outlined\"\n                      type=\"number\"\n                      value={settings.vulnerabilityCheckDelay}\n                      onChange={(e) => handleSettingChange('vulnerabilityCheckDelay', parseInt(e.target.value))}\n                      helperText=\"Delay between vulnerability checks to avoid API rate limits (0 for no delay)\"\n                      margin=\"normal\"\n                      disabled={!settings.vulnerabilityChecking}\n                      InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">seconds</InputAdornment>,\n                      }}\n                    />\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </TabPanel>\n        \n        {/* Updates & Cache Settings */}\n        <TabPanel value={tabValue} index={4}>\n          <Typography variant=\"h6\" gutterBottom>\n            Updates & Cache Settings\n          </Typography>\n          \n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <Card>\n                <CardContent>\n                  <Box sx={{ mb: 3 }}>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={settings.cacheEnabled}\n                          onChange={(e) => handleSettingChange('cacheEnabled', e.target.checked)}\n                        />\n                      }\n                      label=\"Enable Cache\"\n                    />\n                    \n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1, mb: 2 }}>\n                      Cache Maven Central responses to improve performance and reduce API calls\n                    </Typography>\n                    \n                    <TextField\n                      fullWidth\n                      label=\"Cache Duration\"\n                      variant=\"outlined\"\n                      type=\"number\"\n                      value={settings.cacheDuration}\n                      onChange={(e) => handleSettingChange('cacheDuration', parseInt(e.target.value))}\n                      helperText=\"How long to keep cached data (in hours)\"\n                      margin=\"normal\"\n                      disabled={!settings.cacheEnabled}\n                      InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">hours</InputAdornment>,\n                      }}\n                    />\n                    \n                    <Box sx={{ mt: 2 }}>\n                      <Button \n                        variant=\"outlined\" \n                        startIcon={<RefreshIcon />}\n                        onClick={handleClearCache}\n                        disabled={!settings.cacheEnabled}\n                      >\n                        Clear Cache\n                      </Button>\n                    </Box>\n                  </Box>\n                  \n                  <Divider sx={{ my: 2 }} />\n                  \n                  <Box sx={{ mt: 3 }}>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      Default Chart Type\n                    </Typography>\n                    \n                    <FormControl fullWidth margin=\"normal\">\n                      <Select\n                        value={settings.defaultChartType}\n                        onChange={(e) => handleSettingChange('defaultChartType', e.target.value)}\n                      >\n                        <MenuItem value=\"pie\">Pie Chart</MenuItem>\n                        <MenuItem value=\"bar\">Bar Chart</MenuItem>\n                        <MenuItem value=\"line\">Line Chart</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </TabPanel>\n        \n        <Box sx={{ p: 3, display: 'flex', justifyContent: 'flex-end' }}>\n          <Button \n            variant=\"outlined\" \n            startIcon={<RefreshIcon />} \n            onClick={handleReset}\n            sx={{ mr: 2 }}\n          >\n            Reset to Defaults\n          </Button>\n          <Button \n            variant=\"contained\" \n            startIcon={<SaveIcon />} \n            onClick={handleSave}\n          >\n            Save Settings\n          </Button>\n        </Box>\n      </Paper>\n      \n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={5000}\n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      >\n        <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default Settings; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}