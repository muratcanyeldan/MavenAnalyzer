{"ast":null,"code":"var _jsxFileName = \"/Users/yeldan/IdeaProjects/MavenAnalyzer/MavenAnalyzerUI/src/components/charts/VulnerabilityChart.js\";\nimport React, { useMemo } from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { Box, Typography, CircularProgress } from '@mui/material';\n\n/**\n * Vulnerability Bar Chart component using Nivo\n * \n * @param {Object} props - Component props\n * @param {Object} props.data - Either analysis data object or bar chart data from API\n * @param {boolean} props.loading - Loading state\n * @param {number} props.height - Chart height in pixels\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VulnerabilityChart = ({\n  data,\n  loading,\n  height = 300\n}) => {\n  // Add diagnostic logging to help identify the issue\n  console.log('VulnerabilityChart data:', data);\n\n  // Process data to get vulnerability counts by severity - moved to top level before any returns\n  const vulnerabilityData = useMemo(() => {\n    // Check if we have the new API data format\n    if (data !== null && data !== void 0 && data.data && Array.isArray(data.data)) {\n      // We have data from the chart data API\n      console.log('Using API data format:', data.data);\n      return data.data;\n    }\n\n    // Fallback to the old format (analysis object with dependencies)\n    // If no data or dependencies, return empty array\n    if (!data || !data.dependencies) {\n      console.log('No valid data found');\n      return [];\n    }\n\n    // Initialize counters for each severity level\n    const counts = {\n      Critical: 0,\n      High: 0,\n      Medium: 0,\n      Low: 0,\n      Unknown: 0,\n      None: 0\n    };\n\n    // Count vulnerabilities by severity\n    data.dependencies.forEach(dependency => {\n      if (dependency.vulnerabilities) {\n        dependency.vulnerabilities.forEach(vuln => {\n          console.log('Processing vulnerability:', vuln);\n\n          // Normalize severity to handle case differences (CRITICAL vs Critical)\n          let severity = vuln.severity || 'Unknown';\n          console.log('Original severity:', vuln.severity, 'Normalized to:', severity);\n\n          // Normalize case for consistency\n          if (severity.toUpperCase() === 'CRITICAL') severity = 'Critical';else if (severity.toUpperCase() === 'HIGH') severity = 'High';else if (severity.toUpperCase() === 'MEDIUM') severity = 'Medium';else if (severity.toUpperCase() === 'LOW') severity = 'Low';else if (severity.toUpperCase() === 'UNKNOWN') severity = 'Unknown';else if (severity === undefined || severity === null) severity = 'Unknown';\n          counts[severity] = (counts[severity] || 0) + 1;\n        });\n      }\n    });\n    console.log('Final vulnerability counts:', counts);\n\n    // Convert to the format expected by the bar chart\n    return Object.keys(counts).filter(key => counts[key] > 0 && key !== 'None') // Only include non-zero values and exclude 'None'\n    .map(key => ({\n      severity: key,\n      category: key,\n      // Added for compatibility with the new API format\n      count: counts[key],\n      color: getColorForSeverity(key)\n    }));\n  }, [data]);\n  console.log('Processed vulnerability data:', vulnerabilityData);\n\n  // Calculate a clean summary text without any \"undefined\" in it\n  const cleanSummary = useMemo(() => {\n    var _vulnerabilityData$fi;\n    if (vulnerabilityData.length === 0) return null;\n    const severityCounts = vulnerabilityData.filter(item => item.severity !== 'None' && item.severity !== 'Unknown').map(item => `${item.count} ${item.severity.toLowerCase()}`).join(', ');\n    const unknownCount = ((_vulnerabilityData$fi = vulnerabilityData.find(item => item.severity === 'Unknown')) === null || _vulnerabilityData$fi === void 0 ? void 0 : _vulnerabilityData$fi.count) || 0;\n    if (severityCounts && unknownCount > 0) {\n      return `${severityCounts}, and ${unknownCount} with unspecified severity level`;\n    } else if (severityCounts) {\n      return severityCounts;\n    } else if (unknownCount > 0) {\n      return `${unknownCount} with unspecified severity level`;\n    }\n    return null;\n  }, [vulnerabilityData]);\n\n  // Add the clean summary to the data object if it's going to be used elsewhere\n  if (data && cleanSummary) {\n    data.cleanSummary = cleanSummary;\n  }\n\n  // Return loading indicator if data is loading\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Return message if no data available\n  if (!(data !== null && data !== void 0 && data.data) && !(data !== null && data !== void 0 && data.dependencies) || vulnerabilityData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height,\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"No vulnerability data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsiveBar, {\n      data: vulnerabilityData,\n      keys: (data === null || data === void 0 ? void 0 : data.keys) || ['count'],\n      indexBy: data !== null && data !== void 0 && data.data ? 'category' : 'severity',\n      margin: {\n        top: 40,\n        right: 50,\n        bottom: 40,\n        left: 60\n      },\n      padding: 0.3,\n      valueScale: {\n        type: 'linear'\n      },\n      indexScale: {\n        type: 'band',\n        round: true\n      },\n      colors: ({\n        data\n      }) => data.color,\n      borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1.6]]\n      },\n      axisTop: null,\n      axisRight: null,\n      axisBottom: {\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'Severity',\n        legendPosition: 'middle',\n        legendOffset: 32\n      },\n      axisLeft: {\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'Count',\n        legendPosition: 'middle',\n        legendOffset: -40\n      },\n      labelSkipWidth: 12,\n      labelSkipHeight: 12,\n      labelTextColor: {\n        from: 'color',\n        modifiers: [['darker', 1.6]]\n      },\n      animate: true,\n      motionStiffness: 90,\n      motionDamping: 15\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to get color based on severity\nfunction getColorForSeverity(severity) {\n  console.log('Getting color for severity:', severity);\n  switch (severity) {\n    case 'Critical':\n      return '#d32f2f';\n    // dark red\n    case 'High':\n      return '#f44336';\n    // red\n    case 'Medium':\n      return '#ff9800';\n    // orange\n    case 'Low':\n      return '#ffeb3b';\n    // yellow\n    case 'Unknown':\n      return '#9e9e9e';\n    // grey for unknown\n    default:\n      console.log('Unrecognized severity:', severity);\n      return '#9e9e9e';\n    // grey for any other case\n  }\n}\nexport default VulnerabilityChart;","map":{"version":3,"names":["React","useMemo","ResponsiveBar","Box","Typography","CircularProgress","jsxDEV","_jsxDEV","VulnerabilityChart","data","loading","height","console","log","vulnerabilityData","Array","isArray","dependencies","counts","Critical","High","Medium","Low","Unknown","None","forEach","dependency","vulnerabilities","vuln","severity","toUpperCase","undefined","Object","keys","filter","key","map","category","count","color","getColorForSeverity","cleanSummary","_vulnerabilityData$fi","length","severityCounts","item","toLowerCase","join","unknownCount","find","sx","display","justifyContent","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","p","indexBy","margin","top","right","bottom","left","padding","valueScale","type","indexScale","round","colors","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping"],"sources":["/Users/yeldan/IdeaProjects/MavenAnalyzer/MavenAnalyzerUI/src/components/charts/VulnerabilityChart.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { Box, Typography, CircularProgress } from '@mui/material';\n\n/**\n * Vulnerability Bar Chart component using Nivo\n * \n * @param {Object} props - Component props\n * @param {Object} props.data - Either analysis data object or bar chart data from API\n * @param {boolean} props.loading - Loading state\n * @param {number} props.height - Chart height in pixels\n */\nconst VulnerabilityChart = ({ data, loading, height = 300 }) => {\n  // Add diagnostic logging to help identify the issue\n  console.log('VulnerabilityChart data:', data);\n  \n  // Process data to get vulnerability counts by severity - moved to top level before any returns\n  const vulnerabilityData = useMemo(() => {\n    // Check if we have the new API data format\n    if (data?.data && Array.isArray(data.data)) {\n      // We have data from the chart data API\n      console.log('Using API data format:', data.data);\n      return data.data;\n    }\n    \n    // Fallback to the old format (analysis object with dependencies)\n    // If no data or dependencies, return empty array\n    if (!data || !data.dependencies) {\n      console.log('No valid data found');\n      return [];\n    }\n\n    // Initialize counters for each severity level\n    const counts = {\n      Critical: 0,\n      High: 0,\n      Medium: 0,\n      Low: 0,\n      Unknown: 0,\n      None: 0\n    };\n\n    // Count vulnerabilities by severity\n    data.dependencies.forEach(dependency => {\n      if (dependency.vulnerabilities) {\n        dependency.vulnerabilities.forEach(vuln => {\n          console.log('Processing vulnerability:', vuln);\n          \n          // Normalize severity to handle case differences (CRITICAL vs Critical)\n          let severity = vuln.severity || 'Unknown';\n          console.log('Original severity:', vuln.severity, 'Normalized to:', severity);\n          \n          // Normalize case for consistency\n          if (severity.toUpperCase() === 'CRITICAL') severity = 'Critical';\n          else if (severity.toUpperCase() === 'HIGH') severity = 'High';\n          else if (severity.toUpperCase() === 'MEDIUM') severity = 'Medium';\n          else if (severity.toUpperCase() === 'LOW') severity = 'Low';\n          else if (severity.toUpperCase() === 'UNKNOWN') severity = 'Unknown';\n          else if (severity === undefined || severity === null) severity = 'Unknown';\n          \n          counts[severity] = (counts[severity] || 0) + 1;\n        });\n      }\n    });\n\n    console.log('Final vulnerability counts:', counts);\n\n    // Convert to the format expected by the bar chart\n    return Object.keys(counts)\n      .filter(key => counts[key] > 0 && key !== 'None') // Only include non-zero values and exclude 'None'\n      .map(key => ({\n        severity: key,\n        category: key,  // Added for compatibility with the new API format\n        count: counts[key],\n        color: getColorForSeverity(key)\n      }));\n  }, [data]);\n\n  console.log('Processed vulnerability data:', vulnerabilityData);\n\n  // Calculate a clean summary text without any \"undefined\" in it\n  const cleanSummary = useMemo(() => {\n    if (vulnerabilityData.length === 0) return null;\n    \n    const severityCounts = vulnerabilityData\n      .filter(item => item.severity !== 'None' && item.severity !== 'Unknown')\n      .map(item => `${item.count} ${item.severity.toLowerCase()}`)\n      .join(', ');\n      \n    const unknownCount = vulnerabilityData.find(item => item.severity === 'Unknown')?.count || 0;\n    \n    if (severityCounts && unknownCount > 0) {\n      return `${severityCounts}, and ${unknownCount} with unspecified severity level`;\n    } else if (severityCounts) {\n      return severityCounts;\n    } else if (unknownCount > 0) {\n      return `${unknownCount} with unspecified severity level`;\n    }\n    \n    return null;\n  }, [vulnerabilityData]);\n  \n  // Add the clean summary to the data object if it's going to be used elsewhere\n  if (data && cleanSummary) {\n    data.cleanSummary = cleanSummary;\n  }\n\n  // Return loading indicator if data is loading\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Return message if no data available\n  if ((!data?.data && !data?.dependencies) || vulnerabilityData.length === 0) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height, p: 2 }}>\n        <Typography color=\"text.secondary\">No vulnerability data available</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ height }}>\n      <ResponsiveBar\n        data={vulnerabilityData}\n        keys={data?.keys || ['count']}\n        indexBy={data?.data ? 'category' : 'severity'}\n        margin={{ top: 40, right: 50, bottom: 40, left: 60 }}\n        padding={0.3}\n        valueScale={{ type: 'linear' }}\n        indexScale={{ type: 'band', round: true }}\n        colors={({ data }) => data.color}\n        borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Severity',\n          legendPosition: 'middle',\n          legendOffset: 32\n        }}\n        axisLeft={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: 'Count',\n          legendPosition: 'middle',\n          legendOffset: -40\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n      />\n    </Box>\n  );\n};\n\n// Helper function to get color based on severity\nfunction getColorForSeverity(severity) {\n  console.log('Getting color for severity:', severity);\n  switch (severity) {\n    case 'Critical':\n      return '#d32f2f'; // dark red\n    case 'High':\n      return '#f44336'; // red\n    case 'Medium':\n      return '#ff9800'; // orange\n    case 'Low':\n      return '#ffeb3b'; // yellow\n    case 'Unknown':\n      return '#9e9e9e'; // grey for unknown\n    default:\n      console.log('Unrecognized severity:', severity);\n      return '#9e9e9e'; // grey for any other case\n  }\n}\n\nexport default VulnerabilityChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}